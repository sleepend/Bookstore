package ym.nemo233.bookstore.sqlite;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ym.nemo233.bookstore.sqlite.PopularBooks;
import ym.nemo233.bookstore.sqlite.WebsiteSource;
import ym.nemo233.bookstore.sqlite.BooksInformation;

import ym.nemo233.bookstore.sqlite.PopularBooksDao;
import ym.nemo233.bookstore.sqlite.WebsiteSourceDao;
import ym.nemo233.bookstore.sqlite.BooksInformationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig popularBooksDaoConfig;
    private final DaoConfig websiteSourceDaoConfig;
    private final DaoConfig booksInformationDaoConfig;

    private final PopularBooksDao popularBooksDao;
    private final WebsiteSourceDao websiteSourceDao;
    private final BooksInformationDao booksInformationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        popularBooksDaoConfig = daoConfigMap.get(PopularBooksDao.class).clone();
        popularBooksDaoConfig.initIdentityScope(type);

        websiteSourceDaoConfig = daoConfigMap.get(WebsiteSourceDao.class).clone();
        websiteSourceDaoConfig.initIdentityScope(type);

        booksInformationDaoConfig = daoConfigMap.get(BooksInformationDao.class).clone();
        booksInformationDaoConfig.initIdentityScope(type);

        popularBooksDao = new PopularBooksDao(popularBooksDaoConfig, this);
        websiteSourceDao = new WebsiteSourceDao(websiteSourceDaoConfig, this);
        booksInformationDao = new BooksInformationDao(booksInformationDaoConfig, this);

        registerDao(PopularBooks.class, popularBooksDao);
        registerDao(WebsiteSource.class, websiteSourceDao);
        registerDao(BooksInformation.class, booksInformationDao);
    }
    
    public void clear() {
        popularBooksDaoConfig.clearIdentityScope();
        websiteSourceDaoConfig.clearIdentityScope();
        booksInformationDaoConfig.clearIdentityScope();
    }

    public PopularBooksDao getPopularBooksDao() {
        return popularBooksDao;
    }

    public WebsiteSourceDao getWebsiteSourceDao() {
        return websiteSourceDao;
    }

    public BooksInformationDao getBooksInformationDao() {
        return booksInformationDao;
    }

}
