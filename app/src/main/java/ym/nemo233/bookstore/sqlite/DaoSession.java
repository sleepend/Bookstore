package ym.nemo233.bookstore.sqlite;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ym.nemo233.bookstore.sqlite.BookInformation;
import ym.nemo233.bookstore.sqlite.Chapter;
import ym.nemo233.bookstore.sqlite.HistoryQuery;
import ym.nemo233.bookstore.sqlite.WebSite;
import ym.nemo233.bookstore.sqlite.HotBook;

import ym.nemo233.bookstore.sqlite.BookInformationDao;
import ym.nemo233.bookstore.sqlite.ChapterDao;
import ym.nemo233.bookstore.sqlite.HistoryQueryDao;
import ym.nemo233.bookstore.sqlite.WebSiteDao;
import ym.nemo233.bookstore.sqlite.HotBookDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookInformationDaoConfig;
    private final DaoConfig chapterDaoConfig;
    private final DaoConfig historyQueryDaoConfig;
    private final DaoConfig webSiteDaoConfig;
    private final DaoConfig hotBookDaoConfig;

    private final BookInformationDao bookInformationDao;
    private final ChapterDao chapterDao;
    private final HistoryQueryDao historyQueryDao;
    private final WebSiteDao webSiteDao;
    private final HotBookDao hotBookDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookInformationDaoConfig = daoConfigMap.get(BookInformationDao.class).clone();
        bookInformationDaoConfig.initIdentityScope(type);

        chapterDaoConfig = daoConfigMap.get(ChapterDao.class).clone();
        chapterDaoConfig.initIdentityScope(type);

        historyQueryDaoConfig = daoConfigMap.get(HistoryQueryDao.class).clone();
        historyQueryDaoConfig.initIdentityScope(type);

        webSiteDaoConfig = daoConfigMap.get(WebSiteDao.class).clone();
        webSiteDaoConfig.initIdentityScope(type);

        hotBookDaoConfig = daoConfigMap.get(HotBookDao.class).clone();
        hotBookDaoConfig.initIdentityScope(type);

        bookInformationDao = new BookInformationDao(bookInformationDaoConfig, this);
        chapterDao = new ChapterDao(chapterDaoConfig, this);
        historyQueryDao = new HistoryQueryDao(historyQueryDaoConfig, this);
        webSiteDao = new WebSiteDao(webSiteDaoConfig, this);
        hotBookDao = new HotBookDao(hotBookDaoConfig, this);

        registerDao(BookInformation.class, bookInformationDao);
        registerDao(Chapter.class, chapterDao);
        registerDao(HistoryQuery.class, historyQueryDao);
        registerDao(WebSite.class, webSiteDao);
        registerDao(HotBook.class, hotBookDao);
    }
    
    public void clear() {
        bookInformationDaoConfig.clearIdentityScope();
        chapterDaoConfig.clearIdentityScope();
        historyQueryDaoConfig.clearIdentityScope();
        webSiteDaoConfig.clearIdentityScope();
        hotBookDaoConfig.clearIdentityScope();
    }

    public BookInformationDao getBookInformationDao() {
        return bookInformationDao;
    }

    public ChapterDao getChapterDao() {
        return chapterDao;
    }

    public HistoryQueryDao getHistoryQueryDao() {
        return historyQueryDao;
    }

    public WebSiteDao getWebSiteDao() {
        return webSiteDao;
    }

    public HotBookDao getHotBookDao() {
        return hotBookDao;
    }

}
